@using Nop.Plugin.Admin.OrderManagementList.Models
@using Nop.Plugin.Admin.OrderManagementList.Domain
@using Nop.Web.Framework.UI;

@model OrderManagementListModel
@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    Html.AddCssFileParts("~/Plugins/Nop.Plugin.Admin.OrderManagementList/Content/OrderStyles.css");
    ViewData["Title"] = "Ordrehåndtering";
}

<form asp-controller="OrderManagement" asp-action="List" method="post">
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <h1>Ordrehåndtering</h1>
            </div>
        </div>
    </div>

    <hr />
    @if (string.IsNullOrEmpty(Model.ErrorMessage) == false)
    {
        <div id="divErrorMessage">
            <h3>Error occurred:</h3>
            <h4>@Model.ErrorMessage</h4>
        </div>
    }
    else
    {
        <div class="divSingleOrderHeader">
            <div class="divOrderInfo">
                Ordre info
            </div>
            <div class="divProductInfo">
                Produkt info
            </div>
            <div class="divCustomerComment">
                Kundekommentar
            </div>
            <div class="divShippingInfo">
                Forsendelse
            </div>
            <div class="divCustomerInfo">
                Kunde info
            </div>
            <div class="divOrderNote">
                Noter
            </div>
        </div>
        <div style="clear:both;"></div>
        <hr class="hrOrderManagement" />

        @foreach (AOPresentationOrder order in Model.PresentationOrders)
        {
        <div class="divSingleOrder">
            <div class="divOrderInfo">
                <a class="btn bg-yellow large-text" href="/Admin/Order/Edit/@order.OrderId">Ordrenr.:&nbsp;@order.OrderId</a>
                <br /><br />
                <a class="btn bg-purple large-text" href="/Admin/Order/PdfPackagingSlip?shipmentId=6">Følgeseddel</a>
                <br /><br />
                <a class="btn bg-green large-text" onclick="javascript:CompleteOrderAjax(@order.OrderId);">Afslut ordre</a>
                <br /><br />
                @order.OrderDateTime
                <br />
                <span class="large-text"><b>@order.TotalOrderAmount</b></span>
                <br /><br />
                @Html.Raw(order.FormattedPaymentStatus)
            </div>
            <div class="divProductInfo">
                @foreach (AOOrderItem item in order.PresentationOrderItems)
                {
                    <div>
                        <input type="checkbox" name="chkIsTakenAside" @(item.IstakenAside ? "checked" : "") onclick="javascript:UpdateProductTakenAsideAjax(@order.OrderId, @item.OrderItemId, @item.ProductId, this.checked);" />&nbsp;Er taget fra&nbsp;&nbsp;
                        <input type="checkbox" name="chkOrdered" @(item.IsOrdered ? "checked" : "") onclick="javascript:UpdateProductOrderedAjax(@order.OrderId, @item.OrderItemId, @item.ProductId, this.checked);" value="@item.ProductId" />&nbsp;Er bestilt
                        <span id="spn-@order.OrderId-@item.OrderItemId-@item.ProductId" class="success" style="display:none;"></span>
                        <br />
                        <span>@Html.Raw(item.ProductName)</span>
                        <hr class="hrSmall" />
                    </div>
                }
            </div>
            <div class="divCustomerComment">@Html.Raw(order.CustomerComment)</div>
            <div class="divShippingInfo">@Html.Raw(order.ShippingInfo)</div>
            <div class="divCustomerInfo">
                @Html.Raw(order.CustomerInfo)
                <br />
                @order.CustomerEmail
            </div>
            <div class="divOrderNote">@Html.Raw(order.OrderNotes)</div>
        </div>
            <div style="clear:both;"></div>
            <hr class="hrOrderManagement" />
        }
    }

    <script type="text/javascript">

        function UpdateProductTakenAsideAjax(orderId, orderItemId, productId, checked)
        {
            $.ajax({
                cache: false,
                type: 'GET',
                url: '@Url.Action("UpdateProductTakenAside", "OrderManagement")',
                data: { orderId: orderId, orderItemId: orderItemId, productId: productId, isTakenAside: checked },
                dataType: 'json',
                success: function (data)
                {
                    var infoId = "#spn-" + orderId + "-" + orderItemId + "-" + productId;
                    $(infoId).show();
                    $(infoId).html(data);

                    if (data.indexOf("Error:") > -1)
                    {
                        $(infoId).css("color", "red");
                    }
                    else
                    {
                        $(infoId).fadeOut(2000, function ()
                        {
                            // Animation complete.
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr && xhr.responseText) {
                        var err = eval("(" + xhr.responseText + ")");
                        alert('Error while saving.' + err.Message);
                    }
                    else {
                        alert('Error while saving.');
                    }
                }
            });
            return false;
        }

        function UpdateProductOrderedAjax(orderId, orderItemId, productId, checked)
        {
            $.ajax({
                cache: false,
                type: 'GET',
                url: '@Url.Action("UpdateProductOrdered", "OrderManagement")',
                data: { orderId: orderId, orderItemId: orderItemId, productId: productId, isOrdered: checked },
                dataType: 'json',
                success: function (data) {
                    var infoId = "#spn-" + orderId + "-" + orderItemId + "-" + productId;
                    $(infoId).show();
                    $(infoId).html(data);

                    if (data.indexOf("Error:") > -1)
                    {
                        $(infoId).css("color", "red");
                    }
                    else
                    {
                        $(infoId).fadeOut(2000, function ()
                        {
                            // Animation complete.
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr && xhr.responseText) {
                        var err = eval("(" + xhr.responseText + ")");
                        alert('Error while saving.' + err.Message);
                    }
                    else {
                        alert('Error while saving.');
                    }
                }
            });
            return false;
        }


        function CompleteOrderAjax(orderId)
        {
            $.ajax({
                cache: false,
                type: 'GET',
                url: '@Url.Action("CompleteOrder", "OrderManagement")',
                data: { orderId: orderId },
                dataType: 'json',
                success: function (data) 
                {
                    if (data.indexOf("Error:") > -1)
                    {
                        alert('ARRHHGGG: ' + data);
                    }
                    else
                    {
                        alert('yeaaa: data=' + data);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr && xhr.responseText) {
                        var err = eval("(" + xhr.responseText + ")");
                        alert('Error while saving.' + err.Message);
                    }
                    else {
                        alert('Error while saving.');
                    }
                }
            });
            return false;
        }        
    </script>

</form>
