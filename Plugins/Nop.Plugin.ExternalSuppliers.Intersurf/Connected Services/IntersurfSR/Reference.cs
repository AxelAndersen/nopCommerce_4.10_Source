//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IntersurfSR
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IntersurfSR.CSV_ServiceSoap")]
    public interface CSV_ServiceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AuthenticateUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<IntersurfSR.AuthenticateUserResponse> AuthenticateUserAsync(IntersurfSR.AuthenticateUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCSVString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<IntersurfSR.GetCSVStringResponse> GetCSVStringAsync(IntersurfSR.GetCSVStringRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SecuredWebServiceHeader
    {
        
        private string usernameField;
        
        private string passwordField;
        
        private string authenticatedTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username
        {
            get
            {
                return this.usernameField;
            }
            set
            {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string AuthenticatedToken
        {
            get
            {
                return this.authenticatedTokenField;
            }
            set
            {
                this.authenticatedTokenField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenticateUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AuthenticateUserRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public IntersurfSR.SecuredWebServiceHeader SecuredWebServiceHeader;
        
        public AuthenticateUserRequest()
        {
        }
        
        public AuthenticateUserRequest(IntersurfSR.SecuredWebServiceHeader SecuredWebServiceHeader)
        {
            this.SecuredWebServiceHeader = SecuredWebServiceHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenticateUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AuthenticateUserResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string AuthenticateUserResult;
        
        public AuthenticateUserResponse()
        {
        }
        
        public AuthenticateUserResponse(string AuthenticateUserResult)
        {
            this.AuthenticateUserResult = AuthenticateUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCSVString", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCSVStringRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public IntersurfSR.SecuredWebServiceHeader SecuredWebServiceHeader;
        
        public GetCSVStringRequest()
        {
        }
        
        public GetCSVStringRequest(IntersurfSR.SecuredWebServiceHeader SecuredWebServiceHeader)
        {
            this.SecuredWebServiceHeader = SecuredWebServiceHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCSVStringResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCSVStringResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetCSVStringResult;
        
        public GetCSVStringResponse()
        {
        }
        
        public GetCSVStringResponse(string GetCSVStringResult)
        {
            this.GetCSVStringResult = GetCSVStringResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface CSV_ServiceSoapChannel : IntersurfSR.CSV_ServiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class CSV_ServiceSoapClient : System.ServiceModel.ClientBase<IntersurfSR.CSV_ServiceSoap>, IntersurfSR.CSV_ServiceSoap
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CSV_ServiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(CSV_ServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), CSV_ServiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CSV_ServiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CSV_ServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CSV_ServiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CSV_ServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CSV_ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<IntersurfSR.AuthenticateUserResponse> IntersurfSR.CSV_ServiceSoap.AuthenticateUserAsync(IntersurfSR.AuthenticateUserRequest request)
        {
            return base.Channel.AuthenticateUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<IntersurfSR.AuthenticateUserResponse> AuthenticateUserAsync(IntersurfSR.SecuredWebServiceHeader SecuredWebServiceHeader)
        {
            IntersurfSR.AuthenticateUserRequest inValue = new IntersurfSR.AuthenticateUserRequest();
            inValue.SecuredWebServiceHeader = SecuredWebServiceHeader;
            return ((IntersurfSR.CSV_ServiceSoap)(this)).AuthenticateUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<IntersurfSR.GetCSVStringResponse> IntersurfSR.CSV_ServiceSoap.GetCSVStringAsync(IntersurfSR.GetCSVStringRequest request)
        {
            return base.Channel.GetCSVStringAsync(request);
        }
        
        public System.Threading.Tasks.Task<IntersurfSR.GetCSVStringResponse> GetCSVStringAsync(IntersurfSR.SecuredWebServiceHeader SecuredWebServiceHeader)
        {
            IntersurfSR.GetCSVStringRequest inValue = new IntersurfSR.GetCSVStringRequest();
            inValue.SecuredWebServiceHeader = SecuredWebServiceHeader;
            return ((IntersurfSR.CSV_ServiceSoap)(this)).GetCSVStringAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.CSV_ServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.CSV_ServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.CSV_ServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://webshop.intersurf.dk/CSV_service.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.CSV_ServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://webshop.intersurf.dk/CSV_service.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            CSV_ServiceSoap,
            
            CSV_ServiceSoap12,
        }
    }
}
